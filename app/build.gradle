plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'kotlinx-serialization'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    sourceSets.configureEach {
        languageSettings.optIn("kotlin.RequiresOptIn")
    }
}

android {
    compileSdk 34

    defaultConfig {
        applicationId "com.suihan74.nedge"
        minSdk 23
        targetSdk 34
        // (major[1])-(minor[2])-(fix[3])-(dev[2])-(build mode[1;it is added by productFlavors])
        versionCode 1_00_014_02_0
        versionName "1.0.14"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                    "room.schemaLocation":"$projectDir/schemas".toString(),
                    "room.incremental":"true",
                    "room.expandProjection":"true"
                ]
            }
        }
    }

    buildFeatures {
        dataBinding true
        viewBinding true
        buildConfig true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions = ["mode"]
    productFlavors {
        demo {
            dimension "mode"
            versionNameSuffix "-demo"
            versionCode 0 + android.defaultConfig.versionCode
        }
        full {
            dimension "mode"
            versionCode 1 + android.defaultConfig.versionCode
        }
    }
    compileOptions {
        // Flag to enable support for the Java 8+ APIs
        coreLibraryDesugaringEnabled true
    }
    namespace 'com.suihan74.nedge'
}

kapt {
    correctErrorTypes true
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
    implementation 'org.objenesis:objenesis:3.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.fragment:fragment-ktx:1.6.2"

    // Firebase
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:32.8.0')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-work:1.2.0"
    kapt "androidx.hilt:hilt-compiler:1.2.0"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.7.0"
//   kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.7.0"
    testImplementation "androidx.arch.core:core-testing:2.2.0"

    // Preferences DataStore (SharedPreferences like APIs)
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1"

    // Room
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    // WorkManager
    def work_version = "2.9.0"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // AndroidPhotoshopColorPicker
//    implementation 'com.github.aziztitu:AndroidPhotoshopColorPicker:1.1'
    implementation 'com.github.alexandre-g:AndroidPhotoshopColorPicker:1.2.4'
//    implementation 'com.azeesoft.lib.colorpicker:colorpicker:1.0.8@aar'

    // AdMob
    implementation "com.google.android.gms:play-services-ads:23.0.0"
    implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
    implementation 'androidx.preference:preference-ktx:1.2.1'

    implementation project(":utilities")

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    def mockito_version = "3.6.0"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    androidTestImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    // show licenses
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.1'
}
